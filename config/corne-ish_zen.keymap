/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV 1
#define NUM 2
#define SYM 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label="QWERTY";
                        bindings = <
   &none        &kp Q           &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U                   &kp I                   &kp O                   &kp P                   &reset
   &none        &mt LGUI A      &mt LALT S      &mt LCTRL D     &mt LSHIFT F    &kp G           &kp H           &mt LSHIFT J            &mt LCTRL K             &mt LALT L              &mt LGUI SEMI           &none
   &none        &kp Z           &kp X           &kp C           &kp V           &kp B           &kp N           &kp M                   &kp COMMA               &kp DOT                 &kp FSLH                &none
                                                &kp ESC         &lt NAV BSPC    &kp TAB         &lt NUM RET     &lt SYM SPACE           &kp RALT
                        >;
                };

                nav_layer {
                        label="NAV";
                        bindings = <
   &none        &none           &none           &none           &none           &none           &none           &none                   &none                   &none                   &none                   &none
   &none        &none           &none           &none           &none           &none           &kp LEFT        &kp DOWN                &kp UP                  &kp RIGHT               &none                   &none
   &none        &none           &none           &none           &none           &none           &kp HOME        &none                   &none                   &kp END                 &none                   &none
                          	                &kp LGUI        &none          &kp SPACE       &kp RET         &none                  &kp RALT
                        >;
                };

                num_layer {
                        label="NUMBER";
                        bindings = <
   &none        &none           &kp N7          &kp N8          &kp N9          &none          &kp CARET       &kp AMPS                &kp KP_MULTIPLY         &kp LPAR                &kp RPAR                &kp BSPC
   &none        &none           &kp N4          &kp N5          &kp N6          &none          &kp MINUS       &kp EQUAL               &kp LBKT                &kp RBKT                &kp BSLH                &kp GRAVE
   &none        &none           &kp N1          &kp N2          &kp N3          &none          &kp UNDER       &kp PLUS                &kp LBRC                &kp RBRC                &kp PIPE                &kp TILDE
                    	                        &kp UNDER       &none          &kp N0          &kp RET         &none                  &kp RALT
                        >;
                };

                sym_layer {
                        label="SYMBOL";
                        bindings = <
   &none        &none           &kp N7          &kp N8          &kp N9          &none          &kp CARET       &kp AMPS                &kp KP_MULTIPLY         &kp LPAR                &kp RPAR                &kp BSPC
   &none        &none           &kp N4          &kp N5          &kp N6          &none          &kp MINUS       &kp EQUAL               &kp LBKT                &kp RBKT                &kp BSLH                &kp GRAVE
   &none        &none           &kp N1          &kp N2          &kp N3          &none          &kp UNDER       &kp PLUS                &kp LBRC                &kp RBRC                &kp PIPE                &kp TILDE
                    	                        &kp UNDER       &none          &kp N0          &kp RET         &none                  &kp RALT
                        >;
                };
        };
};
