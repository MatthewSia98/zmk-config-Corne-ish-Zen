#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define COLEMAK 0
#define QWERTY 1
#define NAV 2
#define NUM 3 
#define SYM 4


/ {
        chosen {
            zmk,matrix_transform = &five_column_transform;
        };
        
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label="CLM";
                        bindings = <
   &kp Q           &kp W           &kp F           &kp P           &kp B           &kp J           &kp L                   &kp U                   &kp Y                   &kp SQT              
   &kp A      &kp R      &kp S     &kp T    &kp G           &kp M           &kp N            &kp E             &kp I              &kp O           
   &kp Z           &kp X           &kp C           &kp D           &kp V           &kp K           &kp H                   &kp COMMA               &kp DOT                 &kp SLASH                
                                   &kp ESC         &kp BSPC    &kp TAB         &kp RET     &kp SPACE           &none
                        >;
                };
//
//                qwerty_layer {
//                        label="QWT";
//                        bindings = <
//   &kp Q           &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U                   &kp I                   &kp O                   &kp P              
//   &kp A      &kp S      &kp D     &kp F    &kp G           &kp H           &kp J            &kp K             &kp L              &kp SQT           
//   &kp Z           &kp X           &kp C           &kp V           &kp B           &kp N           &kp M                   &kp COMMA               &kp DOT                 &kp SLASH                
//                                   &kp ESC         &kp BSPC    &kp TAB         &kp RET     &kp SPACE           &none
//                        >;
//                };
//
                nav_layer {
                        label="NAV";
                        bindings = <
   &none           &none           &none           &none           &none           &none           &none                   &none                   &none                   &none
   &none           &none           &none           &none           &none           &kp LEFT        &kp DOWN                &kp UP                  &kp RIGHT               &none                   
   &none           &none           &none           &none           &none           &kp HOME        &none                   &none                   &kp END                 &none                   
                          	       &kp LGUI        &none           &kp SPACE       &kp RET         &none                   &none
                        >;
                };

//                num_layer {
//                        label="NBR";
//                        bindings = <
//   &reset          &kp N7          &kp N8          &kp N9          &none          &kp CARET       &kp AMPS                &none                   &kp LPAR                &kp RPAR               
//   &none           &kp N4          &kp N5          &kp N6          &none          &kp MINUS       &kp EQUAL               &kp LBKT                &kp RBKT                &kp BSLH               
//   &none           &kp N1          &kp N2          &kp N3          &none          &kp UNDER       &kp PLUS                &kp LBRC                &kp RBRC                &kp PIPE               
//                    	           &kp UNDER       &kp N0          &kp PIPE       &kp RET         &none                   &none
//                        >;
//                };

//                sym_layer {
//                        label="SYM";
//                        bindings = <
//   &kp LBRC         &kp AMPS        &kp STAR        &kp BSLH       &kp RBRC       &kp CARET       &kp AMPS                &kp KP_MULTIPLY         &kp LPAR                &kp RPAR                
//   &kp LPAR         &kp DLLR        &kp PRCNT       &kp CARET      &kp RPAR       &kp MINUS       &kp EQUAL               &kp LBKT                &kp RBKT                &kp BSLH                
//   &kp LBKT         &kp EXCL        &kp AT          &kp HASH       &kp RBKT       &kp UNDER       &kp PLUS                &kp LBRC                &kp RBRC                &kp PIPE                
//                    	            &kp UNDER       &none          &none          &kp RET         &none                   &none
//                        >;
//               };
        };
};
